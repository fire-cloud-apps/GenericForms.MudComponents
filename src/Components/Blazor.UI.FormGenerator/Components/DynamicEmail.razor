@using System.ComponentModel.DataAnnotations

<MudTextField @bind-Value="FormData"

              InputType="InputType.Email"
              Placeholder="@Fields.Placeholder"
              ReadOnly="@Fields.IsReadOnly"
              MaxLength="@Fields.MaxLength"
              HelperText="@Fields.HelperText"
              HelperTextOnFocus="@Fields.HelperTextOnFocus"

              Required="@Fields.Validation.IsRequired"
              RequiredError="@Fields.Validation.RequiredError"
              Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid" })"

              Adornment="@Fields.Adornment"
              AdornmentText="@Fields.AdornmentText"
              AdornmentColor="@Fields.AdornmentColor"
              AdornmentIcon="@Fields.AdornmentIcon"
              Label="@Fields.Label" 
              Variant="@Fields.Variant"
              >
</MudTextField>

@code {
    [Parameter]
    public required Field? Fields { get; set; }


    #region Binding Form Data As String

    private string? CurrentValue { get; set; }
    [Parameter]
    public required string? FormData
    {
        get => CurrentValue;
        set
        {
            if (CurrentValue != value)
            {
                CurrentValue = value;
                FormDataChanged.InvokeAsync(CurrentValue);
            }
        }
    }

    [Parameter]
    public EventCallback<string?> FormDataChanged { get; set; }

    #endregion

}
